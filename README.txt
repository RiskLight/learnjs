
1.Напишите функцию upFirst(str), которая возвращает строку str с заглавным первым символом, 
остальные символы должны быть в нижнем регистре (пример: upFirst("иванов"),
должно вернуть "Иванов", up_first("ИВАНОВ"), должно вернуть "Иванов")

2. Напишите функцию truncate(str, maxlength), которая проверяет длину строки str,
и если она превосходит maxlength – заменяет конец str на "...", так чтобы ее длина стала равна maxlength

3. Напишите функцию getShortName(fullName), которая преобразует полное ФИО fullName в краткое.
Например getShortName("Иванов Сергей Петрович"), функция должна вернуть "Иванов С.П."

4. Напишите функцию, которая принимает массив объектов.
Функция должна вернуть массив только с теми объектами, у которых есть свойство name

5. Напишите функцию, которая принимает два массива. Функция должна вернуть результат объединения этих массивов без дубликатов

6. Напишите функцию, которая преобразует строки snake_case в camelCase.
Например modifyString('super-user-name') // вернуть 'superUserName'

7. Напишите функцию, которая принимает значение с математическим выражением и возвращает результат его решения. 
Например: calc('5 + 10') // вернет 15

8. Напишите функцию, которая принимает объект с пользователями и возвращает массив имён. 
const users = [
    {
        id: 1,
        name: 'John',
        age: 20
    },
    {
        id: 2,
        name: 'Marry',
        age: 22
    },
    {
        id: 3,
        name: 'Poll',
        age: 25
    },
]

Функция должна вернуть ['John', 'Marry', 'Poll']

9. Напишите функцию, которая принимает массив. Каждый элемент массива, который является числом - умножить на 2,
строки - преобразовать в массив, где каждый символ - отдельный элемент массива. Функция должна вернуть измененный объект

10. Напишите функцию, которая проверяет строку на спам. Функция должна возвращать true, если в строке есть 2 одинаковых слова, 
и false - если все слова уникальны.

11.Напишите функцию, которая проверяет строку на нецензурную лексику. 
Создайте массив, который будет содержать слова, которые нельзя пропускать.
Функция должна принимать строку и проверять наличие в ней слов из массива, которые нужно пропускать.
Если в строке есть слово из массива - вернуть true, если нет - false.

12. Напишите функцию, которая принимает массив. Функция должна вернуть предложение только из строковых значений массива. 
Например: 
arrayToSentence(['Привет', 1, null, 'как', '{}', 'дела']) // вернуть Привет как дела

13. Напишите функцию, которая принимает массив из 10 целых чисел (от 0 до 9), который возвращает строку этих чисел в форме номера телефона.
createPhoneNumber([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) // => returns "(123) 456-7890"

function createPhoneNumber(numbers){
  let format = '(xxx) xxx-xxxx';
  
  for (number of numbers) {
    format = format.replace('x', number);
  }
  
  return format;
}

14. Напишите функцию, которая массив с пользователями и возвращает имя пользователя с наибольшей заработной платой. Например:
const users = [
    {
        id: 1,
        name: 'John',
        age: 20,
        salary: 1000
    },
    {
        id: 2,
        name: 'Marry',
        age: 22,
        salary: 1500
    },
    {
        id: 3,
        name: 'Poll',
        age: 25,
        salary: 1200
    },
]

getHighestSalarty(users) // должно вернуть 'Marry'

15. Напишите функцию, которая проверяет корректность строки. 
Строка должна быть не менее 3х символов и не более 16ти символов, должна быть не пустая, не должна содержать числа.

16. Напишите функцию, которая проверяет пароль на корректность. 
Пароль должен быть не менее 6ти символов, должен содержать хотя бы одну цифру и хотя бы одну заглавную букву